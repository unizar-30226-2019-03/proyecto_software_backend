openapi: 3.0.0

info:
  description: Documento de la API de Unicast
  version: 1.3.9
  title: Swagger Unicast

servers:
  - url: "{protocol}://{host}:{port}/{basePath}"
    variables:
      host:
        default: ec2-35-181-76-150.eu-west-3.compute.amazonaws.com
      protocol:
        enum:
          - http
          - https
        default: http
      port:
        enum:
          - "8080"
          - "80"
        default: "8080"
      basePath:
        default: api

tags:
  - name: user
    description: Operaciones sobre usuarios
  - name: university
    description: Operaciones sobre universidades
  - name: subject
    description: Operaciones sobre asignaturas
  - name: degree
    description: Operaciones sobre carreras
  - name: video
    description: Operaciones sobre vídeos
  - name: comment
    description: Operaciones sobre comentarios
  - name: display
    description: Operaciones sobre las visualizaciones de videos (historial)
  - name: vote
    description: Operaciones sobre los votos
  - name: message
    description: Operaciones sobre los mensajes
  - name: reproductionList
    description: Operaciones sobre listas de reproduccion
  - name: notification
    description: Operaciones sobre notificaciones

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  parameters:
    NoCacheHeaderParameter:
      in: header
      name: Cache-Control
      schema:
        type: string
        default: no-cache, no-store, must-revalidate

    PragmaHeaderParameter:
      in: header
      name: Pragma
      schema:
        type: string
        default: no-cache

    ExpiresHeaderParameter:
      in: header
      name: Expires
      schema:
        type: string
        default: 0

    PageParameter:
      name: page
      in: query
      schema:
        type: integer
      description: Número de la página a devolver

    SortParameter:
      name: sort
      in: query
      style: simple
      schema:
        type: array
        items:
          type: string
      description: Parámetros en la forma `($propertyname,)+[asc|desc]?`

    DisplayProjectionParameter:
      name: projection
      in: query
      description: Incluir si se quiere obtener tambien los videos en la respuesta
      schema:
        type: string
        default: displayWithVideo
        enum: [displayWithVideo]

    SubjectProjectionParameter:
      name: projection
      in: query
      description: Incluir si se quiere obtener tambien la universidad en la respuesta
      schema:
        type: string
        default: subjectWithUniversity
        enum: [subjectWithUniversity]

    VideoProjectionParameter:
      name: projection
      in: query
      description: Incluir si se quiere obtener tambien la universidad y/o la asignatura en la respuesta
      schema:
        type: string
        default: videoWithSubject
        enum: [videoWithSubject, videoWithSubjectAndUniversity, videoWithUniversity]

    CommentProjectionParameter:
      name: projection
      in: query
      description: Incluir si se quiere obtener tambien el usuario que ha hecho el comentario
      schema:
        type: string
        default: commentWithUser
        enum: [commentWithUser]

  schemas:
    Token:
      type: object
      properties:
        id:
          type: integer
          format: int64
        token:
          type: string
      required:
        - token

    Exception:
      type: object
      properties:
        status:
          type: integer
          format: int64
        message:
          type: string
        path:
          type: string
          format: url

    Video:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        timestamp:
          type: string
          format: date-time
        url:
          type: string
          format: url
        thumbnailUrl:
          type: string
          format: url
        score:
          type: number
          format: float
        seconds:
          type: integer
          format: int64
        university:
          $ref: 'api-spec.yml#/components/schemas/University'
        subject:
          $ref: 'api-spec.yml#/components/schemas/Subject'
        # comments:
        # votes:
        # tags:

    VideoGetEmbedded:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            videos:
              type: array
              items:
                $ref: '#/components/schemas/Video'

    VideoGetResponse:
      allOf:
        - $ref: '#/components/schemas/GetResponse'
        - $ref: '#/components/schemas/VideoGetEmbedded'

    VideoToUpload:
      type: object
      properties:
        file:
          type: string
          format: binary
        thumbnail:
          type: string
          format: binary
        title:
          type: string
        description:
          type: string
        subject_id:
          type: integer
          format: int64
      required:
        - file
        - thumbnail
        - title
        - description
        - subject_id

    University:
      type: object
      discriminator:
        propertyName: name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        photo:
          type: string
          format: url
      required:
        - name
        - photo

    Subject:
      type: object
      discriminator:
        propertyName: name
      properties:
        id:
          type: integer
          format: int64
        university:
          $ref: '#/components/schemas/University'
        name:
          type: string
        abbreviation:
          type: string
        avgScore:
          type: number
          format: double
      required:
        - name
        - abbreviation

    Notification:
      type: object
      properties:
        id:
          type: integer
          format: int64
        text:
          type: string
        timestamp:
          type: string
          format: date-time
        notificationCategory:
          type: string
          enum: [messages, videos]
        creator_id:
          type: integer
          format: int64

    UserIsNotified:
      type: object
      properties:
        checked:
          type: boolean
        notification:
          $ref: '#/components/schemas/Notification'

    PaginationPage:
      type: object
      properties:
        size:
          type: integer
        totalElements:
          type: integer
        totalPages:
          type: integer
        number:
          type: integer
      required:
        - size
        - totalElements
        - totalPages
        - number

    GetResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/PaginationPage'

    UniversityGetEmbedded:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            universities:
              type: array
              items:
                $ref: '#/components/schemas/University'

    UniversityGetResponse:
      allOf:
        - $ref: '#/components/schemas/GetResponse'
        - $ref: '#/components/schemas/UniversityGetEmbedded'

    SubjectGetEmbedded:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            subjects:
              type: array
              items:
                $ref: '#/components/schemas/Subject'

    SubjectGetResponse:
      allOf:
        - $ref: '#/components/schemas/GetResponse'
        - $ref: '#/components/schemas/SubjectGetEmbedded'

    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        name:
          type: string
        surnames:
          type: string
        photo:
          type: string
          format: url
        description:
          type: string
        role:
          type: string
          default: ROLE_USER
          enum: [ROLE_USER, ROLE_PROFESSOR, ROLE_ADMIN]


    UserGetEmbedded:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            users:
              type: array
              items:
                $ref: '#/components/schemas/User'

    UserGetResponse:
      allOf:
        - $ref: '#/components/schemas/GetResponse'
        - $ref: '#/components/schemas/UserGetEmbedded'

    Degree:
      type: object
      discriminator:
        propertyName: name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      required:
        - name

    DegreeList:
      type: object
      properties:
        degrees:
          type: array
          items:
                $ref: '#/components/schemas/Degree'

    DegreeGetResponse:
      allOf:
        - $ref: '#/components/schemas/GetResponse'
        - $ref: '#/components/schemas/DegreeGetEmbedded'

    DegreeGetEmbedded:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            degrees:
              type: array
              items:
                $ref: '#/components/schemas/Degree'

    Comment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        text:
          type: string
        timestamp:
          type: string
          format: date-time
        secondsFromBeginning:
          type: integer
          format: int64
        user:
          $ref: '#/components/schemas/User'
      required:
        - text
        - timestamp
        - secondsFromBeginning

    CommentGetEmbedded:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            comments:
              type: array
              items:
                $ref: '#/components/schemas/Comment'

    CommentGetResponse:
      allOf:
        - $ref: '#/components/schemas/GetResponse'
        - $ref: '#/components/schemas/CommentGetEmbedded'

    Display:
      type: object
      discriminator:
        propertyName: id
      properties:
        id:
          type: object
          properties:
            videoId:
              type: integer
              format: int64
            userId:
              type: integer
              format: int64
        video:
          $ref: '#/components/schemas/Video'
        timestampLastTime:
          type: string
          format: date-time
        secsFromBeg:
          type: integer
          format: int64

    DisplayGetEmbedded:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            displays:
              type: array
              items:
                $ref: '#/components/schemas/Display'

    DisplayGetResponse:
      allOf:
        - $ref: '#/components/schemas/GetResponse'
        - $ref: '#/components/schemas/DisplayGetEmbedded'

    Vote:
      type: object
      properties:
        id:
          type: object
          properties:
            videoId:
              type: integer
              format: int64
            userId:
              type: integer
              format: int64
          required:
            - videoId
            - userId
        clarity:
          type: integer
          format: int64
        quality:
          type: integer
          format: int64
        suitability:
          type: integer
          format: int64
      required:
        - id
        - clarity
        - quality
        - suitability

    VoteGetEmbedded:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            displays:
              type: array
              items:
                $ref: '#/components/schemas/Vote'

    VoteGetResponse:
      allOf:
        - $ref: '#/components/schemas/GetResponse'
        - $ref: '#/components/schemas/VoteGetEmbedded'

    Message:
      type: object
      properties:
        id:
          type: integer
          format: int64
        text:
          type: string
        timestamp:
          type: string
          format: date-time
        receiver:
          $ref: 'api-spec.yml#/components/schemas/User'
        sender:
          $ref: 'api-spec.yml#/components/schemas/User'

    MessageGetEmbedded:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            messages:
              type: array
              items:
                $ref: '#/components/schemas/Message'

    MessageGetResponse:
      allOf:
        - $ref: '#/components/schemas/GetResponse'
        - $ref: '#/components/schemas/MessageGetEmbedded'

    ReproductionList:
      type: object
      discriminator:
        propertyName: name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        numVideos:
          type: integer
        thumbnail:
          type: string
          format: url
      required:
          - name

    ReproductionListGetResponse:
      allOf:
        - $ref: '#/components/schemas/GetResponse'
        - $ref: '#/components/schemas/ReproductionListGetEmbedded'

    ReproductionListGetEmbedded:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            reproductionLists:
              type: array
              items:
                $ref: '#/components/schemas/ReproductionList'

    UserIsNotifiedGetResponse:
      allOf:
        - $ref: '#/components/schemas/GetResponse'
        - $ref: '#/components/schemas/UserIsNotifiedGetEmbedded'

    UserIsNotifiedGetEmbedded:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            usersAreNotified:
              type: array
              items:
                $ref: '#/components/schemas/UserIsNotified'


paths:

  #User endpoints

  /public/register:
    $ref: 'user_endpoints.yml#/Register'

  /public/authenticate:
    $ref: 'user_endpoints.yml#/Authenticate'

  /users/update:
    $ref: 'user_endpoints.yml#/UsersUpdate'

  /users/{id}:
    $ref: 'user_endpoints.yml#/UsersId'

  /users/{id}/subjects:
    $ref: 'user_endpoints.yml#/UsersIdSubjects'

  /users/{id}/subjectsAsProfessor:
    $ref: 'user_endpoints.yml#/UsersIdSubjectsAsProfessor'

  /users/{id}/degree:
    $ref: 'user_endpoints.yml#/UsersIdDegree'

  /users/{id}/university:
    $ref: 'user_endpoints.yml#/UsersIdUniversity'

  /users/search/nameStartsWith:
    $ref: 'user_endpoints.yml#/UsersSearchNameStartsWith'

  /users/search/usernameStartsWith:
    $ref: 'user_endpoints.yml#/UsersSearchUsernameStartsWith'

  /users/search/surnamesStartsWith:
    $ref: 'user_endpoints.yml#/UsersSearchSurnamesStartsWith'

  /users/search/nameContaining:
    $ref: 'user_endpoints.yml#/UsersSearchNameContaining'

  /users/search/usernameContaining:
    $ref: 'user_endpoints.yml#/UsersSearchUsernameContaining'

  /users/search/surnamesContaining:
    $ref: 'user_endpoints.yml#/UsersSearchSurnamesContaining'

  /users/search/byUsername:
    $ref: 'user_endpoints.yml#/UsersSearchUsername'

  /users/setDisabled:
    $ref: 'user_endpoints.yml#/UsersSetDisabled'

  /users/delete:
    $ref: 'user_endpoints.yml#/DeleteUser'

  /users/makeProfessor:
    $ref: 'user_endpoints.yml#/MakeProfessor'

  /users/eraseProfessor:
    $ref: 'user_endpoints.yml#/EraseProfessor'

  /users/search/professors:
    $ref: 'user_endpoints.yml#/GetProfessors'


  #Subject endpoints

  /subjects:
    $ref: 'subject_endpoints.yml#/Subjects'

  /subjects/{id}:
    $ref: 'subject_endpoints.yml#/SubjectsId'

  /subjects/{id}/professors:
    $ref: 'subject_endpoints.yml#/SubjectsIdProfessors'

  /subjects/{id}/university:
    $ref: 'subject_endpoints.yml#/SubjectsIdUniversity'

  /subjects/search/nameStartsWith:
    $ref: 'subject_endpoints.yml#/SubjectsSearchNameStartsWith'

  /subjects/search/nameContaining:
    $ref: 'subject_endpoints.yml#/SubjectsSearchNameContaining'

  /subjects/search/name:
    $ref: 'subject_endpoints.yml#/SubjectsSearchName'

  /subjects/search/userIn:
    $ref: 'subject_endpoints.yml#/SubjectsUserIn'

  /subjects/search/ranking:
    $ref: 'subject_endpoints.yml#/SubjectsGetRanking'

  /subjects/follow:
    $ref: 'subject_endpoints.yml#/FollowSubject'

  /subjects/unfollow:
    $ref: 'subject_endpoints.yml#/UnfollowSubject'

  /subjects/professors:
    $ref: 'subject_endpoints.yml#/Professor'

  #Degree endpoints

  /degrees:
    $ref: 'degree_endpoints.yml#/Degrees'

  /degrees/{id}:
    $ref: 'degree_endpoints.yml#/DegreesId'

  /degrees/{id}/universities:
    $ref: 'degree_endpoints.yml#/DegreesIdUniversities'

  /degrees/search/nameStartsWith:
    $ref: 'degree_endpoints.yml#/DegreeSearchNameStartstWith'

  /degrees/search/nameContaining:
    $ref: 'degree_endpoints.yml#/DegreeSearchNameContaining'

  /degrees/search/name:
    $ref: 'degree_endpoints.yml#/DegreeSearchName'

  #University endpoints

  /universities:
    $ref: 'university_endpoints.yml#/Universities'

  /universities/add:
    $ref: 'university_endpoints.yml#/AddUniversity'

  /universities/{id}/subjects:
    $ref: 'university_endpoints.yml#/UniversitiesIdSubjects'

  /universities/{id}/degrees:
    $ref: 'university_endpoints.yml#/UniversitiesIdDegrees'

  /universities/search/nameStartsWith:
    $ref: 'university_endpoints.yml#/UniversitiesSearchNameStartsWith'

  /universities/search/nameContaining:
    $ref: 'university_endpoints.yml#/UniversitiesSearchNameContaining'

  /universities/delete:
    $ref: 'university_endpoints.yml#/DeleteUniversity'

  #Video endpoints

  /videos:
    $ref: 'video_endpoints.yml#/Videos'

  /videos/search/recommendations:
    $ref: 'video_endpoints.yml#/Recommendations'

  /videos/upload:
    $ref: 'video_endpoints.yml#/UploadVideo'

  /videos/search/titleContaining:
    $ref: 'video_endpoints.yml#/VideosSearchTitleContaining'

  /videos/search/titleStartsWith:
    $ref: 'video_endpoints.yml#/VideosSearchTitleStartsWith'

  /videos/{id}/uploader:
    $ref: 'video_endpoints.yml#/VideosIdUploader'

  /videos/search/uploaderVideos:
     $ref: 'video_endpoints.yml#/VideosUploaderVideos'

  /videos/search/subjectVideos:
    $ref: 'video_endpoints.yml#/VideosSubjectVideos'

  /videos/{id}/subject:
    $ref: 'video_endpoints.yml#/VideosIdSubject'

  /videos/{id}:
    $ref: 'video_endpoints.yml#/VideoId'

  /videos/search/userSubjects:
    $ref: 'video_endpoints.yml#/UserSubjects'

  /videos/delete:
    $ref: 'video_endpoints.yml#/DeleteVideo'

  /videos/search/reproductionList:
    $ref: 'video_endpoints.yml#/FindVideoByReproductionList'

  /videos/search/mostPopularLastWeek:
    $ref: 'video_endpoints.yml#/MostPopularVideo'


  #Comment endpoints

  /comments:
    $ref: 'comment_endpoints.yml#/CommentsAdd'

  /comments/{id}/commentRepliedTo:
    $ref: 'comment_endpoints.yml#/CommentsIdCommentRepliedTo'

  /comments/{id}/commentReplies:
    $ref: 'comment_endpoints.yml#/CommentsIdCommentReplies'

  /comments/search/video:
    $ref: 'comment_endpoints.yml#/CommentsSearchByVideo'

  #Display endpoints

  /displays:
    $ref: 'display_endpoints.yml#/UpdateDisplay'

  /displays/search/user:
    $ref: 'display_endpoints.yml#/DisplaysSearchUser'

  /displays/{video_id}:
    $ref: 'display_endpoints.yml#/DisplaysDelete'

  /displays/search/userAndVideo:
    $ref: 'display_endpoints.yml#/FindByUserIdAndVideoId'

  #Vote endpoint

  /votes:
    $ref: 'vote_endpoints.yml#/Votes'

  #Messages endpoints

  /messages:
    $ref: 'message_endpoints.yml#/Messages'

  /messages/fromSender:
    $ref: 'message_endpoints.yml#/MessagesFrom'

  /messages/toReceiver:
    $ref: 'message_endpoints.yml#/MessagesTo'

  /messages/lastMessages:
    $ref: 'message_endpoints.yml#/LastMessages'

  #Notification endpoints

  /usersAreNotified/search/userUncheckedNotifications:
    $ref: 'notification_endpoints.yml#/UserUncheckedNotifications'

  /usersAreNotified/search/userNotifications:
    $ref: 'notification_endpoints.yml#/UserNotifications'

  /usersAreNotified/check:
    $ref: 'notification_endpoints.yml#/NotificationsCheck'

  #ReproductionList endpoints

  /reproductionLists/add:
    $ref: 'reproduction_list_endpoints.yml#/AddReproductionList'

  /reproductionLists/{id}:
    $ref: 'reproduction_list_endpoints.yml#/DeleteReproductionList'

  /reproductionLists/search/user:
    $ref: 'reproduction_list_endpoints.yml#/GetUserReproductionLists'

  /reproductionLists/addVideo:
    $ref: 'reproduction_list_endpoints.yml#/AddVideo'

  /reproductionLists/deleteVideo:
    $ref: 'reproduction_list_endpoints.yml#/DeleteVideo'

  /reproductionLists/search/videoAndUser:
    $ref: 'reproduction_list_endpoints.yml#/GetReproductionListVideoIn'
