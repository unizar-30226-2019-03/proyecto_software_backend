openapi: 3.0.0

info:
  description: Documento de la API de Unicast
  version: 1.0.0
  title: Swagger Unicast

servers:
  - url: "{protocol}://{host}:{port}/{basePath}"
    variables:
      host:
        default: ec2-35-181-26-7.eu-west-3.compute.amazonaws.com
      protocol:
        enum:
          - http
          - https
        default: http
      port:
        enum:
          - "8080"
          - "80"
        default: "8080"
      basePath:
        default: api

tags:
  - name: user
    description: Operaciones sobre usuario
# - name: video
#   description: Operaciones sobre vídeos

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  # schemas:
  #   NewUser:
  #     type: object
  #     properties:
  #       username:
  #         type: string
  #       password:
  #         type: string
  #   Video:
  #     type: object
  #     properties:
  #       title:
  #         type: string
  #       description:
  #         type: string

paths:
  /public/register:
    post:
      tags:
        - user
      summary: Registro de un nuevo usuario en el sistema
      description: Adicion de nuevos usuarios
      operationId: addUser
      requestBody:
        description: Usuario que se va a añadir
        required: [username, password, email, description, university_id, photo]
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                username:
                  description: Nombre del nuevo usuario
                  type: string
                password:
                  description: Contraseña del nuevo usuario
                  type: string
                  format: password
                email:
                  description: Email del nuevo usuario
                  type: string
                  format: email
                description:
                  description: Descripción para el nuevo usuario
                  type: string
                university_id:
                  description: Universidad del usuario
                  type:
                photo:
                  description: Foto del usuario
                  type: string
                  format: binary
      responses:
        200:
          description: Usuario añadido con exito

  /public/authenticate:
    post:
      tags:
        - user
      summary: Autentificacion de usuarios
      description: Login a un usuario
      operationId: authUser
      requestBody:
        description: Usuario que se va a añadir
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required: [username, password]
              properties:
                username:
                  description: Nombre del usuario a comprobar
                  type: string
                password:
                  description: Contraseña del nuevo usuario
                  type: string
                  format: password
      responses:
        200:
          description: Devuelve el token en header Authorization
  # /videos:
  #   post:
  #     tags:
  #       - video
  #     summary: Subida de un nuevo video
  #     description: Adicion de nuevo video
  #     operationId: addVideo
  #     requestBody:
  #         description: Video que se va a añadir
  #         required: true
  #         content:
  #           multipart/form-data:
  #             schema:
  #               type: object
  #               properties:
  #                 video:
  #                   $ref: '#/components/schemas/Video'
  #                 subject_id:
  #                   description: Id de la asignatura en la que va el video
  #                   type: integer
  #                 file:
  #                   type: string
  #                   format: binary
  #             encoding:
  #               video:
  #                 contentType: application/json
  #     responses:
  #         200:
  #           description: Usuario añadido con exito
  #     security:
  #       - bearerAuth: []
